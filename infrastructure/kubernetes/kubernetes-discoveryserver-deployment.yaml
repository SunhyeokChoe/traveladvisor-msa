---
apiVersion: v1
# List 로 정의하면 items 내부에 여러 개의 쿠버네티스 리소스를 정의할 수 있습니다.
kind: List
items:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: spring-cloud-kubernetes-discoveryserver
      name: spring-cloud-kubernetes-discoveryserver
    spec:
      ports:
        - name: http
          port: 80
          targetPort: 8761
      selector:
        app: spring-cloud-kubernetes-discoveryserver
      type: ClusterIP
  # 클러스터 관리를 위한 서비스 계정을 생성합니다.
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app: spring-cloud-kubernetes-discoveryserver
      name: spring-cloud-kubernetes-discoveryserver
  # 생성한 서비스 계정에 권한을 부여합니다.
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app: spring-cloud-kubernetes-discoveryserver
      name: spring-cloud-kubernetes-discoveryserver:view
    roleRef:
      kind: Role
      apiGroup: rbac.authorization.k8s.io
      # 아래 kind: Role 의 metadata.name 에서 정의한 규칙을 적용하기 위한 레퍼런스입니다.
      name: namespace-reader
    subjects:
      - kind: ServiceAccount
        name: spring-cloud-kubernetes-discoveryserver
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      namespace: default
      name: namespace-reader
    # namespace-reader Role에 적용할 규칙들을 정의합니다.
    # 아래 규칙은 default 네임스페이스에 있는 서비스, 엔드포인트, 파드에 대한 get, list, watch 권한을 namespace-reader에게 줍니다.
    rules:
      - apiGroups: ["", "extensions", "apps"]
        resources: ["services", "endpoints", "pods"]
        verbs: ["get", "list", "watch"]
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: spring-cloud-kubernetes-discoveryserver-deployment
    spec:
      selector:
        matchLabels:
          app: spring-cloud-kubernetes-discoveryserver
      template:
        metadata:
          labels:
            app: spring-cloud-kubernetes-discoveryserver
        spec:
          # 권한이 설정된 서비스 계정을 사용하도록 설정합니다.
          serviceAccountName: spring-cloud-kubernetes-discoveryserver
          containers:
          - name: spring-cloud-kubernetes-discoveryserver
            image: springcloud/spring-cloud-kubernetes-discoveryserver:3.1.3
            imagePullPolicy: IfNotPresent
            readinessProbe:
              httpGet:
                port: 8761
                path: /actuator/health/readiness
              # 애플리케이션 시작 후 readinessProbe를 80초 후에 체크하고 만약 정상 응답이 온 경우 30초마다 다시 체크합니다.
              # 이 두 값을 주지 않으면 기본값으로 10초로 설정됩니다. 10초로 설정하면 이 K8s 디스커버리 서버 컨테이너가 온전히 생성되기 전에
              # 컨테이너가 정상 실행됐는지 헬스체크를 시도하고, 실행되지 않았다고 판단하면 재시작 하는 무한 재시작 루프에 빠질 수 있습니다. 따라서 시간을 넉넉히 줬습니다.
              initialDelaySeconds: 80
              periodSeconds: 30  
            livenessProbe:
              httpGet:
                port: 8761
                path: /actuator/health/liveness
              initialDelaySeconds: 100
              periodSeconds: 30  
            ports:
            - containerPort: 8761
