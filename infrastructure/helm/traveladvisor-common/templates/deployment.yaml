{{- define "common.deployment" -}}
# 마이크로서비스 배포 매니페스트입니다.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deploymentName }}
  labels:
    app: {{ .Values.appLabel }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appLabel }}
  # 쿠버네티스는 ConfigMap이 업데이트될 때 자동으로 포드를 재시작하지 않습니다.
  # 이를 해결하기 위해 롤링 업데이트 전략을 사용하도록 했습니다.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .Values.appLabel }}
    spec:
      containers:
      - name: {{ .Values.appLabel }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.containerPort }}
          protocol: TCP
        env:
        {{- if .Values.postgres_enabled }}
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.postgresSecretName }}
              key: datasource_postgres_url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.postgresSecretName }}
              key: datasource_postgres_username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.postgresSecretName }}
              key: datasource_postgres_password
        {{- end }}

        {{- if .Values.appname_enabled }}
        - name: SPRING_APPLICATION_NAME
          value: {{ .Values.appName }}
        {{- end }}

        {{- if .Values.profile_enabled }}
        - name: SPRING_PROFILES_ACTIVE
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: SPRING_PROFILES_ACTIVE
        {{- end }}

        {{- if .Values.config_enabled }}
        - name: SPRING_CONFIG_IMPORT
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: SPRING_CONFIG_IMPORT
        {{- end }}

        {{- if .Values.discovery_enabled }}
        - name: SPRING.CLOUD.KUBERNETES.DISCOVERY.DISCOVERY-SERVER-URL
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: SPRING.CLOUD.KUBERNETES.DISCOVERY.DISCOVERY-SERVER-URL
        {{- end }}

        {{- if .Values.resouceserver_enabled }}
        - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI
        {{- end }}

        {{- if .Values.otel_enabled }}
        - name: JAVA_TOOL_OPTIONS
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: JAVA_TOOL_OPTIONS
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: OTEL_EXPORTER_OTLP_ENDPOINT
        - name: OTEL_METRICS_EXPORTER
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: OTEL_METRICS_EXPORTER
        - name: OTEL_SERVICE_NAME
          value: {{ .Values.appName }}
        {{- end }}

        {{- if .Values.kafka_enabled }}
        - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
          valueFrom: 
            configMapKeyRef:
              name: {{ .Values.global.configMapName }}
              key: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
        {{- end }}

{{- end -}}
